#  (FlClash) 配置
# 版本 V1.8-240904
# https://gist.github.com/liuran001/5ca84f7def53c70b554d3f765ff86a33
# 作者: Young (https://t.me/weekin)
# Telegram: https://t.me/weekin
# 修改自官方示例规则 https://wiki.metacubex.one/example/#meta
# 转载请保留此注释
# 尽量添加了较为详尽的注释，不理解的地方建议对照 虚空终端 (Clash Meta) Docs 进行理解
# 虚空终端 (Clash Meta) Docs 地址: https://wiki.metacubex.one
# 不理解的地方不要乱动，如果你是小白，请按下 `Ctrl + F` 搜索 `基础配置`，只修改此部分

# true 是启用
# false 是禁用

# url 里填写自己的订阅,名称不能重复
proxy-providers:
  provider1:
    url: "订阅一"
    type: http
    interval: 86400
    health-check: {enable: true,url: "https://www.gstatic.com/generate_204",interval: 60}
    override:
      additional-prefix: "[provider1]"
    filter: "(?i)^(?!.*(?:流量|套餐|到期|官网|过期)).*$"

  provider2:
    url: "订阅二"
    type: http
    interval: 86400
    health-check: {enable: true,url: "https://www.gstatic.com/generate_204",interval: 60}
    override:
      additional-prefix: "[provider2]"
    filter: "(?i)^(?!.*(?:流量|套餐|到期|官网|过期)).*$"

  provider3:
    url: "订阅三"
    type: http
    interval: 86400
    health-check: {enable: true,url: "https://www.gstatic.com/generate_204",interval: 60}
    override:
      additional-prefix: "[provider3]"
    filter: "(?i)^(?!.*(?:流量|套餐|到期|官网|过期)).*$"

#proxies: 
#  - name: "DIRECT"
#    type: direct
#    udp: true

mixed-port: 7890
ipv6: true
allow-lan: true
unified-delay: false
tcp-concurrent: true
external-controller: 127.0.0.1:9090
external-ui: ui
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

find-process-mode: strict
global-client-fingerprint: chrome

profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  skip-domain:
    - "Mijia Cloud"
    - "+.push.apple.com"

tun:
  enable: true
  stack: mixed
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

dns:
  enable: true
  ipv6: true
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-filter:
    - "*"
    - "+.lan"
    - "+.local"
    - "+.market.xiaomi.com"
  nameserver:
    - https://120.53.53.53/dns-query
    - https://223.5.5.5/dns-query
  proxy-server-nameserver:
    - https://120.53.53.53/dns-query
    - https://223.5.5.5/dns-query
  nameserver-policy:
    "rule-set:cn_domain,private_domain":
      - https://120.53.53.53/dns-query
      - https://223.5.5.5/dns-query
    "rule-set:geolocation-!cn":
      - "https://dns.cloudflare.com/dns-query"
      - "https://dns.google/dns-query"

proxy-groups:

  - name: Proxy
    type: select
    proxies: [AUTO,ALL,DIRECT,HK,TW,JP,SG,KR,US,Other]
    icon: 'https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Proxy.png'
    
  - name: Final
    type: select
    proxies: [Proxy,DIRECT]
    icon: 'https://ghp.ci/https://raw.githubusercontent.com/Orz-3/mini/master/Color/Final.png'
    
  - name: Advertising
    type: select
    proxies: [REJECT,DIRECT]
    icon: 'https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Advertising.png'

  - name: Google
    type: select
    proxies: [Proxy,AUTO,ALL,DIRECT,HK,TW,JP,SG,KR,US,Other]
    icon: 'https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google.png'

  - name: Telegram
    type: select
    proxies: [Proxy,AUTO,ALL,DIRECT,HK,TW,JP,SG,KR,US,Other]
    icon: 'https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png'

  - name: Twitter
    type: select
    proxies: [Proxy,AUTO,ALL,DIRECT,HK,TW,JP,SG,KR,US,Other]
    icon: 'https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Twitter.png'

  - name: BiliBili
    type: select
    proxies: [DIRECT,TW]
    icon: 'https://ghp.ci/https://raw.githubusercontent.com/Orz-3/mini/master/Color/bilibili.png'

  - name: Bahamut
    type: select
    proxies: [TW,Proxy]
    icon: 'https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Bahamut.png'

  - name: YouTube
    type: select
    proxies: [Proxy,AUTO,ALL,DIRECT,HK,TW,JP,SG,KR,US,Other]
    icon: 'https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png'

  - name: NETFLIX
    type: select
    proxies: [Proxy,AUTO,ALL,DIRECT,HK,TW,JP,SG,KR,US,Other]
    icon: 'https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netflix.png'

  - name: Spotify
    type: select
    proxies:  [Proxy,AUTO,ALL,DIRECT,HK,TW,JP,SG,KR,US,Other]
    icon: 'https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png'

  - name: Github
    type: select
    proxies:  [Proxy,AUTO,ALL,DIRECT,HK,TW,JP,SG,KR,US,Other]
    icon: 'https://ghp.ci/https://raw.githubusercontent.com/Orz-3/mini/master/Color/github.png'
    
  - name: TikTok
    type: select
    proxies:  [Proxy,AUTO,ALL,DIRECT,TW,JP,SG,KR,US,Other]
    icon: 'https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TikTok.png'

    
  - name: OpenAI
    type: select
    proxies:  [ChatGPT,US] 
    icon: 'https://ghp.ci/https://raw.githubusercontent.com/Orz-3/mini/master/Color/OpenAI.png'
    
  - name: Microsoft
    type: select
    proxies:  [Proxy,AUTO,ALL,DIRECT,HK,TW,JP,SG,KR,US,Other] 
    icon: 'https://ghp.ci/https://raw.githubusercontent.com/Orz-3/mini/master/Color/Microsoft.png'
    
  - name: Instagram
    type: select
    proxies:  [Proxy,AUTO,ALL,DIRECT,HK,TW,JP,SG,KR,US,Other] 
    icon: 'https://ghp.ci/https://raw.githubusercontent.com/Orz-3/mini/master/Color/Instagram.png'
  - name: GlobalMedia
    type: select
    proxies:  [Proxy,AUTO,ALL,DIRECT,HK,TW,JP,SG,KR,US,Other] 
    icon: 'https://ghp.ci/https://raw.githubusercontent.com/Orz-3/mini/master/Color/Streaming.png'
    
     #分隔,下面是地区分组
  - name: HK
    type: url-test
    include-all: true
    filter: "(?i)港|hk|hongkong|hong kong"
    tolerance: 50
    interval: 300
    icon: 'https://ghp.ci/https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png'


  - name: TW
    type: url-test
    include-all: true
    filter: "(?i)台|tw|taiwan"
    tolerance: 50
    interval: 300
    icon: 'https://ghp.ci/https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png'

  - name: JP
    type: url-test
    include-all: true
    filter: "(?i)日|jp|japan"
    tolerance: 50
    interval: 300
    icon: 'https://ghp.ci/https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png'
    
  - name: KR
    type: url-test
    include-all: true
    filter: "(?i)(韩|KR|kr|Korea)"
    tolerance: 50
    interval: 300
    icon: 'https://ghp.ci/https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png'

  - name: US
    type: url-test
    include-all: true
    filter: "(?i)美|us|unitedstates|united states"
    tolerance: 50
    interval: 300
    icon: 'https://ghp.ci/https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png'

  - name: SG
    type: url-test
    include-all: true
    filter: "(?i)(新|sg|singapore)"
    tolerance: 50
    interval: 300
    icon: 'https://ghp.ci/https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png'
    
  - name: ChatGPT
    type: url-test
    include-all: null
    filter: null
    tolerance: 50
    interval: 300
    use: [provider2] 
    icon: 'https://ghp.ci/https://raw.githubusercontent.com/Orz-3/mini/master/Color/OpenAI.png'

  - name: Other
    type: url-test
    include-all: true
    filter: "(?i)^(?!.*(?:🇭🇰|🇯🇵|🇺🇸|🇸🇬|🇨🇳|港|hk|hongkong|台|tw|taiwan|日|jp|japan|新|sg|singapore|美|us|unitedstates)).*"
    tolerance: 50
    interval: 300
    icon: 'https://ghp.ci/https://raw.githubusercontent.com/Orz-3/mini/master/Color/SS.png'

  - name: ALL
    type: select
    use: [provider1,provider2,provider3]
    tolerance: 50
    interval: 300
    icon: 'https://ghp.ci/https://raw.githubusercontent.com/Orz-3/mini/master/Color/SSR.png'

  - name: AUTO
    type: url-test
    use: [provider1,provider2,provider3] 
    tolerance: 50
    interval: 300
    icon: 'https://ghp.ci/https://raw.githubusercontent.com/Orz-3/mini/master/Color/Urltest.png'

rules:
  # 广告拦截规则
  - DOMAIN-KEYWORD,googleads,REJECT
  - DOMAIN-SUFFIX,ads.inmobi.com,REJECT
  - DOMAIN-SUFFIX,adsappier.com,REJECT
  - DOMAIN-SUFFIX,amazon-adsystem.com,REJECT
  - DOMAIN-SUFFIX,appier.net,REJECT
  - DOMAIN-SUFFIX,appiersig.com,REJECT
  - DOMAIN-SUFFIX,bidder.criteo.com,REJECT
  - DOMAIN-SUFFIX,c.amazon-adsystem.com,REJECT
  - DOMAIN-SUFFIX,cdn2.inner-active.mobi,REJECT
  - DOMAIN-SUFFIX,cr.adsappier.com,REJECT
  - DOMAIN-SUFFIX,criteo.com,REJECT
  - DOMAIN-SUFFIX,googleads.g.doubleclick.net,REJECT
  - DOMAIN-SUFFIX,googleads.g.doubleclick-cn.net,REJECT
  - DOMAIN-SUFFIX,gum.criteo.com,REJECT
  - DOMAIN-SUFFIX,ow.pubmatic.com,REJECT
  - DOMAIN-SUFFIX,pubmatic.com,REJECT
  - DOMAIN-SUFFIX,sdk-dnt.ad.smaato.net,REJECT
  - DOMAIN-SUFFIX,sdk-events.inner-active.mobi,REJECT
  - DOMAIN-SUFFIX,smaato.net,REJECT
  - DOMAIN-SUFFIX,tappx.com,REJECT
  - DOMAIN-SUFFIX,wv.inner-active.mobi,REJECT

  # 需要走代理的规则
  - DOMAIN-SUFFIX,tktn.at,Proxy
  - DOMAIN-SUFFIX,tktn.be,Proxy
  - DOMAIN-SUFFIX,vm.talkatone.com,Proxy

  # 需要直连的规则
  - DOMAIN-SUFFIX,agkn.com,DIRECT
  - DOMAIN-SUFFIX,cohere.com,DIRECT
  - DOMAIN-SUFFIX,crashlytics.com,DIRECT
  - DOMAIN-SUFFIX,inmobi.com,DIRECT
  - DOMAIN-SUFFIX,inner-active.mobi,DIRECT
  - DOMAIN-SUFFIX,ip-api.com,DIRECT
  - DOMAIN-SUFFIX,kochava.com,DIRECT
  - DOMAIN-SUFFIX,mobilefuse.com,DIRECT
  - DOMAIN-SUFFIX,talkatone.com,DIRECT

  # IP 直连规则
  - IP-CIDR,205.164.56.0/24,DIRECT,no-resolve
  - IP-CIDR,216.172.154.0/24,DIRECT,no-resolve
  - IP-CIDR,50.117.27.0/24,DIRECT,no-resolve
  - IP-CIDR,63.251.124.0/24,DIRECT,no-resolve
  - IP-CIDR,69.46.75.0/24,DIRECT,no-resolve
  - RULE-SET,adrules_domain,Advertising
  - RULE-SET,adguard,Advertising
  - RULE-SET,Advertising_rule,Advertising
  - RULE-SET,AdvertisingMiTV_rule,Advertising
  - RULE-SET,private_ip,DIRECT,no-resolve
  - RULE-SET,github_rule,Github
  - RULE-SET,GoogleVoice_rule,US
  - RULE-SET,Line_rule,KR
  - RULE-SET,Whatsapp_rule,US
  - RULE-SET,Instagram_rule,Instagram
  - RULE-SET,youtube_rule,YouTube
  - RULE-SET,google_rule,Google
  - RULE-SET,telegram_rule,Telegram
  - RULE-SET,OpenAI_rule,OpenAI
  - RULE-SET,TikTok_rule,TikTok
  - RULE-SET,WeChat_rule,DIRECT
  - RULE-SET,Microsoft_rule,Microsoft
  - RULE-SET,netflix_rule,NETFLIX
  - RULE-SET,bilibili_rule,BiliBili
  - RULE-SET,bahamut_domain,Bahamut
  - RULE-SET,twitter_rule,Twitter
  - RULE-SET,spotify_rule,Spotify
  - RULE-SET,GlobalMedia_rule,GlobalMedia
  - RULE-SET,cn_domain,DIRECT
  - RULE-SET,Lan_rule,DIRECT
  - RULE-SET,ChinaMax_rule,DIRECT
  - RULE-SET,cn_ip,DIRECT
  - RULE-SET,Proxy_rule,AUTO
  - RULE-SET,geolocation-!cn,AUTO
  - MATCH,Final

rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  classical: &classical {type: http, interval: 86400, behavior: classical, format: yaml}

rule-providers:

  # ===== 去广告类规则 ===== #
  
  adguard:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/AdguardTeam/AdGuardFilters/master/Filters/filter_2_Base/filter.txt"
    interval: 86400
    path: ./rules/adguard.yaml
  adrules_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/Cats-Team/AdRules/main/adrules-mihomo.mrs"
  Advertising_rule:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Advertising/Advertising_Classical.yaml"
  AdvertisingMiTV_rule:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/AdvertisingMiTV/AdvertisingMiTV.yaml"
  
  # ===== 社交网络类规则 ===== #
  
  twitter_rule:
    <<: *domain
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Twitter/Twitter.yaml"
  telegram_rule:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.yaml"
  WeChat_rule:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/WeChat/WeChat.yaml"
  Line_rule:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Line/Line.yaml"
  Whatsapp_rule:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Whatsapp/Whatsapp.yaml"
  GoogleVoice_rule:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GoogleVoice/GoogleVoice.yaml"
  
  # ===== 搜索引擎类规则 =====  #
  
  google_rule:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google.yaml"
  OpenAI_rule:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.yaml"
  github_rule:
    <<: *domain
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GitHub/GitHub.yaml"
  
  # ===== 视频流媒体类规则 =====#
  
  youtube_rule:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.yaml"
  TikTok_rule:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/TikTok/TikTok.yaml"
  GlobalMedia_rule:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GlobalMedia/GlobalMedia.yaml"
  Instagram_rule:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Instagram/Instagram.yaml"
  netflix_rule:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.yaml"
  bilibili_rule:
    <<: *domain
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/BiliBili/BiliBili.yaml"
  bahamut_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bahamut.mrs"
  spotify_rule:
    <<: *domain
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Spotify/Spotify.yaml"
  
  # ===== 企业服务类规则 ===== #
  
  private_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"
  cn_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"
  ehentai_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ehentai.mrs"
  Microsoft_rule:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.yaml"
  Proxy_rule:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Proxy/Proxy.yaml"
  pixiv_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/pixiv.mrs"
  geolocation-!cn:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"
  private_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs"
  cn_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"
  Lan_rule:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.yaml"
  ChinaMax_rule:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax_Classical.yaml"
  
  
  
